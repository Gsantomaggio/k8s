stages:
- name: Create Docker Image
  steps:
  - publishImageConfig:
      dockerfilePath: ml/kubeflow/Dockerfile
      buildContext: ml/kubeflow/
      tag: gsantomaggio/sklearn
      pushRemote: true
      registry: index.docker.io
- name: Setup Orchestrator
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: curl -X DELETE http://ai-orchestrator.ai-orchestrator/api/template/iris
  - runScriptConfig:
      image: python:latest
      shellScript: |-
        file="$(pwd)"
        gitjson='{"name":"iris","description":"iris","backendtype":"kubeflow" }'
        curl  -i -X POST -H "Content-Type: multipart/form-data" -F "template=@$file/ml/kubeflow/classification_v1.py" \
                 -F data="$gitjson" \
                 -X POST http://ai-orchestrator.ai-orchestrator/api/template
  - runScriptConfig:
      image: python:latest
      shellScript: |-
        gitjson='{"type":"kubegit","name":"DEMO IRIS","description":"Demo", "outputdirectory": "models","image": {"name":"gsantomaggio/sklearn","execparameters":""},"git": {"url":"https://github.com/Gsantomaggio/k8s"}}'
        curl  -i -X POST -H "Content-Type: multipart/form-data"\
                 -F data="$gitjson" \
                 -X POST  http://ai-orchestrator.ai-orchestrator/api/pipe/upload
        sleep 3
  - runScriptConfig:
      image: python:latest
      shellScript: |
        gitjson='{"backendname":"Kubeflo","name":"DEMO IRIS","description":"Description","template":"iris" }'

        curl --header "Content-Type: application/json" \
          --data "$gitjson" \
          -X POST http://ai-orchestrator.ai-orchestrator/api/pipe/run
timeout: 60
notification: {}
